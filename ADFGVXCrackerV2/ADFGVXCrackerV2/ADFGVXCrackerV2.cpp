#include <iostream>
#include <conio.h>  
#include "Cracker.h"
#include "Cipher.h"

Cipher Cipher::m_instance;

std::vector<std::pair<double, info>> Cracker::best_ics;
std::mutex Cracker::mutex;


int main()
{
	
	std::string text
	
	std::cout << "ADFGVX CRACKER V2\n\n[-]starting threads..." << std::endl;
	Cracker c1(text, 6);
	Cracker c2(text, 7);
	Cracker c3(text, 8);
	Cracker c4(text, 9);
	Cracker c5(text, 10);

	char key;
	std::cout << "\n\n Press enter to print ics, q to quit" << std::endl;

	while (true) {

		while (true) {
			key = _getch();  // Waits and gets the next character from the keyboard

			if (key == '\r') {  // '\r' is the carriage return, usually Enter key
				print_ic_results();
			}
			else if (key == 'q') {  // Exit the loop if 'q' is pressed
				break;
			}
		}

		std::this_thread::sleep_for(std::chrono::milliseconds(300));
	}
}

