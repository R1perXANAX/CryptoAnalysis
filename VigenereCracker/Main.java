
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		
		String ciphered=		
		"KKZNTWVHFTZLWAESWRJZCWOAHOQNSZMJGOJCSSIPKVRQEINEOJUEOITWMDOPLSVHJHBFWHUYWOPVCTSSFWQZMSGSHTYZOBKLZSOXVFVOUXAUHDIAUAOWKTCDVZFAUEMOAVZEUWKJETRZRFHPEXQEHWFGJTKVMDHXVUDJVWQASORGVOGGKMUPEYFOGKAEVDCJVEGEZFGMZWHHGGPPWCYKKPKLZEGCYWKETVBTIPRZQUEPBAUZRLHRJIPLBTEODZIHBWILISLKQMMHSTFGKWVXJAAELZXOUTVACEIJZUGEIAOZEOJLPEDUKSNKBDPLPWOESLRPDVQWHLCFHWVIRIBCVEHTCZKNFICNSEVYKAJRMCVZISXAQXWRVZRWZSIKTRUDEGMYGIEHZZWMRQCIZEHPRDHNYRBHTYWSKQKEBRWZXOLZPTNDVVVBHAPLKLWEPKIJPPCBIRRYQJTRWUHFCUSPAPATVYVKWKPPJNRZKJUIPXBFUCPFDNPXNIWDNAKPHEEDOYPGDIWGBEGEFJOPEHNAZTZLRQGWMMHPSVWLUIKIDTFGLJJRZEKQVOVOCFVVCWIAPPGBWSVXCVJNTRMHZEIOVOEXBDVYYLQOPPZTMLVAPKVIAEFYEZRWOHBEMJCZDKFCBYMYCFDOQRMTKTCXHKISAEYEKWNPCXTUJPVDPKWPTEDLZLIHNWFKOKVAESEDYHDUXKOQQYDJNQXVIZYVFQWGMMEHOKDKOFSTOPSDJVWNVLETVZGHJUSQTREKKWWVHBUCNEWDAPKVSRNKAWAKFSEBTRGOIGSVWIZNGLIQWWBCDWDRGFXTRGOIGVAPEBNHPRSKOGRBAOCRGXJHPQAGEJDKZWWIEUOZHAJXSACIPRSQUJMUDFPJKVYGYOEIDLGVWHYTHGZFFLQTQMHOTVTHECHLNIFIKHPQXMOBWXGRYVMQEGZZSDUGIMGOOKSHJCIAKAPIWXDMYQAKCVMHAURUEMFJGVJGRQRWEJQRAPSGLICPFZNDPCAPWLJHQQSPMUOVIDKTENTSOOVGHAIIBMSQUWUAQEBIVPGGQNTLZISLXUOKWRTEFHFLKKPXMECPLLXDGCJBTJVLQZGXWRWEFGRYUVKRVTFSPNGGSTHWVSZWKWUSCPWWRAOJAESSYFDNKXVCHVKWHJJIITGAVVRJGVMTONWEGNUHTPHYVVHXPRWLBHZJPOYWVEGCLZXEGHAABPRCHQOQWLCTDDSYUHILVSELGCULMTOSYJWXOYNCFRVMRHVSDSRLPLQEGIVCGRFLYPRSSEMPVFDJFXUFZSWOGDFPPRZEDLKJGWIDQQCAREIRQEOHVJKDRWLISZVGQWQSBAGQKGWPFLOARYXSRHUIZLIYUWPAUIMLSQHMQOOEKOUZTLVAIAKQIWOMZTTYWUIWUHWHWTLEFPJXTAUEPFFXUEEEPDYTDNDSQEBSRUVOJIAGSCYKHJJHCIAUVSQEQMINCEEJRAXIESWFIZKETSTOGWYFLNGVLOFSTWHHQIVMZLYGIJKRPLCRCZHNHQBNGLZGHZGWOISWIKLNOEMTVPVSWUGXPDFLCWNUGETAGZRWRJTWGDZTCKVAVIBSWLTVRDFXBBYSYZUEGKWEMYIJUZQECEBPRLZZJRBHPSRKNEWQZNHCVNVSQMHHVWKGFLHPNHWEILDAHLWAHAZJDCQECAGPJSUWKSMLWPFFDKJXIOHVFQEPIRVHBPWSFKQZRHVSWWZXUVWOCIBTRSVWUAVQXWVXEWIJDLISOTRSONPYPAVPFGVPTWTNSOKZQQCEAAHLRTIHEIALWHVFIARRWTOQDARLCHZAOPPDRPGXLTSCVDWUJKOCUYJWQWMMPJZDFWHKKLIDWZFAUDGSXUSZLLDKQSGAMCKLWWVIPBZSUHFAEXMBWLIGUJGSBIQZUXUJCJZDVLVLUQFEIIMPEGGQWQEIGTRZHICCBSSRVFRUFYINHEMWBWVEWIZTZDDAGWPKCSKAGWQSMYCJVWQZPICHKZKDVYQQDTQEEOGHCRVDCPFLWZCXWUSXKAWUQMVIFPZWDEKIIIVOWWBJCETICOVSQKGAMHRDYAPOCLWRFSYGHJNXLESTVGWAFTAAWDDKQXTSGCGEDGHJTWPNSZTEOKGSBMGLEZVZKPQRZDBFHPHXERUQRFHWOJIDDDELVEGGPOBXYFRAFLBTICZOREPHKEFPLQHIUWXVSCFCXPUKMOCPGSRHJMCFFACSROVEGTOTRDRARIIAHDCLQEOERSCSFGUOWVPSDPRAQZQXBEFYEWGCPWOGDTJGRIKEQKCHZKBAGVTLGTUQKACMZOFDJQGJURPRWPZVDKUWBXWYNJHZDHIABRZJIDGYQRVJRAHZJIWVMHTMUQJLBRWZYQWKVMWRGPEDWJFRANRAKAVWCSQNYOKMPRDCV".toLowerCase();
		Utils.createMatrix();

		Scanner s = new Scanner(System.in);
		System.out.println("VIGENERE PRO CRACKER\n\nInsert permutation key length to crack -> ");

		int traspLen = s.nextInt();
		System.out.println("\n[+]Cracking with permutation: " + traspLen);

		List<List<Integer>> permutations = new ArrayList<>();
		Utils.generatePermutationsForNumber(traspLen, permutations);

		for (List<Integer> permutation : permutations){
			String rearrangedText = Utils.rearrangeText(ciphered, permutation );
			
			String foundKey;
			String deciphered;
			Double IC = 0.0;
			for (int j = 6; j <= 10; j++){

				foundKey = Cracking.crack(rearrangedText.toCharArray(), j );
				deciphered = Utils.decipher(rearrangedText, foundKey);
				IC = Utils.calculateIC(deciphered);

				if(IC >= 0.06){
					System.out.println("\n[+]KEY FOUND:" +foundKey+", IC:" +IC);
					System.out.println("[+]PLAIN TEXT: \n"+deciphered);
				}
			}
		}
			
	}	

}

