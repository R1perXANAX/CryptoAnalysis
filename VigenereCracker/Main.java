
import java.util.Vector;
public class Main {
	public static void main(String[] args) {
		
		String ciphered=		
		"KKZNTWVHFTZLWAESWRJZCWOAHOQNSZMJGOJCSSIPKVRQEINEOJUEOITWMDOPLSVHJHBFWHUYWOPVCTSSFWQZMSGSHTYZOBKLZSOXVFVOUXAUHDIAUAOWKTCDVZFAUEMOAVZEUWKJETRZRFHPEXQEHWFGJTKVMDHXVUDJVWQASORGVOGGKMUPEYFOGKAEVDCJVEGEZFGMZWHHGGPPWCYKKPKLZEGCYWKETVBTIPRZQUEPBAUZRLHRJIPLBTEODZIHBWILISLKQMMHSTFGKWVXJAAELZXOUTVACEIJZUGEIAOZEOJLPEDUKSNKBDPLPWOESLRPDVQWHLCFHWVIRIBCVEHTCZKNFICNSEVYKAJRMCVZISXAQXWRVZRWZSIKTRUDEGMYGIEHZZWMRQCIZEHPRDHNYRBHTYWSKQKEBRWZXOLZPTNDVVVBHAPLKLWEPKIJPPCBIRRYQJTRWUHFCUSPAPATVYVKWKPPJNRZKJUIPXBFUCPFDNPXNIWDNAKPHEEDOYPGDIWGBEGEFJOPEHNAZTZLRQGWMMHPSVWLUIKIDTFGLJJRZEKQVOVOCFVVCWIAPPGBWSVXCVJNTRMHZEIOVOEXBDVYYLQOPPZTMLVAPKVIAEFYEZRWOHBEMJCZDKFCBYMYCFDOQRMTKTCXHKISAEYEKWNPCXTUJPVDPKWPTEDLZLIHNWFKOKVAESEDYHDUXKOQQYDJNQXVIZYVFQWGMMEHOKDKOFSTOPSDJVWNVLETVZGHJUSQTREKKWWVHBUCNEWDAPKVSRNKAWAKFSEBTRGOIGSVWIZNGLIQWWBCDWDRGFXTRGOIGVAPEBNHPRSKOGRBAOCRGXJHPQAGEJDKZWWIEUOZHAJXSACIPRSQUJMUDFPJKVYGYOEIDLGVWHYTHGZFFLQTQMHOTVTHECHLNIFIKHPQXMOBWXGRYVMQEGZZSDUGIMGOOKSHJCIAKAPIWXDMYQAKCVMHAURUEMFJGVJGRQRWEJQRAPSGLICPFZNDPCAPWLJHQQSPMUOVIDKTENTSOOVGHAIIBMSQUWUAQEBIVPGGQNTLZISLXUOKWRTEFHFLKKPXMECPLLXDGCJBTJVLQZGXWRWEFGRYUVKRVTFSPNGGSTHWVSZWKWUSCPWWRAOJAESSYFDNKXVCHVKWHJJIITGAVVRJGVMTONWEGNUHTPHYVVHXPRWLBHZJPOYWVEGCLZXEGHAABPRCHQOQWLCTDDSYUHILVSELGCULMTOSYJWXOYNCFRVMRHVSDSRLPLQEGIVCGRFLYPRSSEMPVFDJFXUFZSWOGDFPPRZEDLKJGWIDQQCAREIRQEOHVJKDRWLISZVGQWQSBAGQKGWPFLOARYXSRHUIZLIYUWPAUIMLSQHMQOOEKOUZTLVAIAKQIWOMZTTYWUIWUHWHWTLEFPJXTAUEPFFXUEEEPDYTDNDSQEBSRUVOJIAGSCYKHJJHCIAUVSQEQMINCEEJRAXIESWFIZKETSTOGWYFLNGVLOFSTWHHQIVMZLYGIJKRPLCRCZHNHQBNGLZGHZGWOISWIKLNOEMTVPVSWUGXPDFLCWNUGETAGZRWRJTWGDZTCKVAVIBSWLTVRDFXBBYSYZUEGKWEMYIJUZQECEBPRLZZJRBHPSRKNEWQZNHCVNVSQMHHVWKGFLHPNHWEILDAHLWAHAZJDCQECAGPJSUWKSMLWPFFDKJXIOHVFQEPIRVHBPWSFKQZRHVSWWZXUVWOCIBTRSVWUAVQXWVXEWIJDLISOTRSONPYPAVPFGVPTWTNSOKZQQCEAAHLRTIHEIALWHVFIARRWTOQDARLCHZAOPPDRPGXLTSCVDWUJKOCUYJWQWMMPJZDFWHKKLIDWZFAUDGSXUSZLLDKQSGAMCKLWWVIPBZSUHFAEXMBWLIGUJGSBIQZUXUJCJZDVLVLUQFEIIMPEGGQWQEIGTRZHICCBSSRVFRUFYINHEMWBWVEWIZTZDDAGWPKCSKAGWQSMYCJVWQZPICHKZKDVYQQDTQEEOGHCRVDCPFLWZCXWUSXKAWUQMVIFPZWDEKIIIVOWWBJCETICOVSQKGAMHRDYAPOCLWRFSYGHJNXLESTVGWAFTAAWDDKQXTSGCGEDGHJTWPNSZTEOKGSBMGLEZVZKPQRZDBFHPHXERUQRFHWOJIDDDELVEGGPOBXYFRAFLBTICZOREPHKEFPLQHIUWXVSCFCXPUKMOCPGSRHJMCFFACSROVEGTOTRDRARIIAHDCLQEOERSCSFGUOWVPSDPRAQZQXBEFYEWGCPWOGDTJGRIKEQKCHZKBAGVTLGTUQKACMZOFDJQGJURPRWPZVDKUWBXWYNJHZDHIABRZJIDGYQRVJRAHZJIWVMHTMUQJLBRWZYQWKVMWRGPEDWJFRANRAKAVWCSQNYOKMPRDCV".toLowerCase();
		Utils.createMatrix(); // create the static matrix of letters (see Utils.java)

		Vector<Executer> threads = new Vector<Executer>(); // create a vector of threads
		for(int i=6;i<=10;i++) {  // for each key length, create a thread
			Executer e=new Executer(i,ciphered); // create an executer: it will try all the permutations of length i
			threads.add(e); // add the executer to the vector of threads
			Thread t=new Thread(e); // create a thread with the executer
			t.start();
		}
			
	}	

}

